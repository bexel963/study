/*
 * < 산술 변환 >
 *  - 두 피연산자의 타입 중에서 더 큰 타입으로 자동으로 일치시킴.
 *  - 작은 타입으로 형변환하면 원래의 값이 손실될 가능성이 있기 때문이다.
 *  - 피연산자의 타입이 int보다 작은 타입이면 int로 변환된다.
 *  - 상수 또는 리터럴 간의 연산은 실행과정 동안 변하는 값이 아니기 때문에, 컴파일 시에 컴파일러가 계산해서 그 결과로 대체 함으로써 
 *    코드를 보다 효율적으로 만든다.
 *    컴파일러가 미리 덧셈연산을 수행하기 때문에 실행 시에는 덧셈 연산이 수행되지 않는다.
 *    그러나 수식에 변수가 들어가 있는 경우에는 컴파일러가 미리 계산을 할 수 없기 때문에 연산된 값을 다른 타입의 변수로 저장시에 
 *    형변환을 해주어야 한다.
 * 
 * < 유니코드 >
 * '0' ~ '9' -> 48 ~ 57
 * 'A' ~ 'Z' -> 65 ~ 90
 * 'a' ~ 'z' -> 97 ~ 122
 * 
 * < Math.round() >
 *  - 매개변수로 받은 값을 소수점 첫째자리에서 반올림을 하고 그 결과를 정수로 돌려수는 메소드
 * 
 * < % >
 *  - 나누는 수로 음수도 허용되나 음수는 무시된다.
 * */
 